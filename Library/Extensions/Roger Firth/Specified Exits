Specified Exits by Roger Firth begins here.Include (-[ SmartCantGo room i dest desttype ndir;    if (location == thedark) "You can't go that way.";!  Find what room the player is in.    room = location;    while (parent(room)) room = parent(room);!  Count the number of exits -- if a direction property is a string or!  a concealed door, don't count it; if it is a routine, count it.    ndir = 0;    objectloop (i in compass) {        dest = room.(i.door_dir);        if (dest) {            desttype = ZRegion(dest);            if ((desttype ~= 3) &&                (desttype == 2 || dest hasnt door || dest hasnt concealed))                ndir++;            }        }    if (ndir == 0) "There are no exits.";!  Print the exits.    print "You can go only ";    objectloop (i in compass) {        dest = room.(i.door_dir);        if (dest) {            desttype = ZRegion(dest);            if ((desttype ~= 3) &&                (desttype == 2 || dest hasnt door || dest hasnt concealed)) {                PrintDirectionName(i);                switch (--ndir) {                    0:       ".";                    1:       print " or ";                    default: print ", ";                    }                }            }        }    ];     [ PrintDirectionName obj;    switch (obj) {        n_obj:   print "north";        s_obj:   print "south";        e_obj:   print "east";        w_obj:   print "west";        ne_obj:  print "northeast";        se_obj:  print "southeast";        nw_obj:  print "northwest";        sw_obj:  print "southwest";        u_obj:   print "up";        d_obj:   print "down";        in_obj:  print "in";        out_obj: print "out";        default: print "some unspecified direction";        }    ];-)	Instead of going nowhere:	report exits.To report exits:	(- SmartCantGo(); new_line; -)	Understand "exits" or "dirs" or "dir" as exit listing.Exit listing is an action applying to nothing.Carry out exit listing:	report exits.Specified Exits ends here.<documentation>Specified Exits is a wrapper for the I6 extension "SmartCantGo" by David Wagner and Roger Firth.  It responds to attempts to walk into walls by telling the player what the available exits are (for instance, "You can go only north or northwest.").  The I7 version also adds an Exits verb which allows the player to type EXITS anywhere to obtain this information.  The exceptions are that exits are not listed in dark rooms (on the assumption that the player could not see where the exits are) and undescribed doors are not listed.To override this behavior in any given location, add a line that says+	Instead of going nowhere in the Planetarium:+	+	say "Confused by the rotating stars, you bump into a wall..."