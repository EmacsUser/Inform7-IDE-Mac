! Relations.i6 segment

[ I7_Now1to1 obj1 rel obj2 ol;
	if (obj2) objectloop (ol provides rel)
		if (ol.rel == obj2) ol.rel = nothing;
	if (obj1) obj1.rel = obj2;
];
[ I7_NowN1toV obj1 rel obj2;
	if (obj1.rel == obj2) obj1.rel = nothing;
];
[ I7_NowS1to1 obj1 rel obj2 ol;
	if (obj1 ofclass Object && obj2 ofclass Object &&
		obj1 provides rel && obj2 provides rel) {
		if (obj1.rel) { (obj1.rel).rel = 0; }
		if (obj2.rel) { (obj2.rel).rel = 0; }
		obj1.rel = obj2; obj2.rel = obj1;
	}
];
[ I7_NowSN1to1 obj1 rel obj2 ol;
	if (obj1 ofclass Object && obj2 ofclass Object &&
		obj1 provides rel && obj2 provides rel) {
		if (obj1.rel == obj2) { obj1.rel = 0; obj2.rel = 0; }
	}
];
[ I7_NowVtoV obj1 bp_id obj2 sym pr pr2 i1 i2;
!  I7_ShowVtoV(bp_id);
	if (sym && (obj2 ~= obj1)) { I7_NowVtoV(obj2, bp_id, obj1, false); }
	pr = bp_id-->0;
	pr2 = bp_id-->1;
	if (pr) {
		if ((obj1 ofclass Object) && pr && (obj1 provides pr)) i1 = obj1.pr;
		else return RunTimeProblem(RTP_IMPREL, obj1, bp_id, 0);
	} else i1 = obj1-1;
	if (pr2) {
 	 if ((obj2 ofclass Object) && pr2 && (obj2 provides pr2)) i2 = obj2.pr2;
		else return RunTimeProblem(RTP_IMPREL, obj2, bp_id, 0);
	} else i2 = obj2-1;
!  print "Setting relation", "(", i1, ",", i2, ")^";
	pr = i1*(bp_id-->3) + i2; i1 = 1; i2 = pr%16; while (i2) { i2--; i1=i1*2; }
	pr = pr/16 + 6;
	bp_id-->pr = (bp_id-->pr) | i1;
];
[ I7_NowNVtoV obj1 bp_id obj2 sym pr pr2 i1 i2;
!  I7_ShowVtoV(bp_id);
!  if (sym && (obj2 > obj1)) { sym = obj1; obj1 = obj2; obj2 = sym; }
	if (sym && (obj2 ~= obj1)) { I7_NowNVtoV(obj2, bp_id, obj1, false); }
	pr = bp_id-->0;
	pr2 = bp_id-->1;
	if (pr) {
		if ((obj1 ofclass Object) && pr && (obj1 provides pr)) i1 = obj1.pr;
		else return RunTimeProblem(RTP_IMPREL, obj1, bp_id, 0);
	} else i1 = obj1-1;
	if (pr2) {
 	 if ((obj2 ofclass Object) && pr2 && (obj2 provides pr2)) i2 = obj2.pr2;
		else return RunTimeProblem(RTP_IMPREL, obj2, bp_id, 0);
	} else i2 = obj2-1;
!  print "Clearing relation", "(", i1, ",", i2, ")^";
	pr = i1*(bp_id-->3) + i2; i1 = 1; i2 = pr%16; while (i2) { i2--; i1=i1*2; }
	pr = pr/16 + 6;
	if ((bp_id-->pr) & i1) bp_id-->pr = bp_id-->pr - i1;
];
[ I7_NowEquiv obj1 prop obj2 big little;
	big = obj1.prop; little = obj2.prop;
	if (big == little) return;
	if (big < little) { little = obj1.prop; big = obj2.prop; }
	objectloop (obj1 provides prop)
		if (obj1.prop == big) obj1.prop = little;
];
[ I7_NowNEquiv obj1 prop obj2 old new;
	old = obj1.prop; new = obj2.prop;
	if (old ~= new) return;
	new = 0;
	objectloop (obj2 provides prop)
		if (obj2.prop > new) new = obj2.prop;
	new++;
	obj1.prop = new;
];
[ I7_TestVtoV obj1 bp_id obj2 sym pr pr2 i1 i2;
	pr = bp_id-->0;
	pr2 = bp_id-->1;
	if (sym && (obj2 > obj1)) { sym = obj1; obj1 = obj2; obj2 = sym; }
	if (pr) {
		if ((obj1 ofclass Object) && pr && (obj1 provides pr)) i1 = obj1.pr;
		else { RunTimeProblem(RTP_IMPREL, obj1, bp_id, 0); rfalse; }
	} else i1 = obj1-1;
	if (pr2) {
 	 if ((obj2 ofclass Object) && pr2 && (obj2 provides pr2)) i2 = obj2.pr2;
		else { RunTimeProblem(RTP_IMPREL, obj2, bp_id, 0); rfalse; }
	} else i2 = obj2-1;
	pr = i1*(bp_id-->3) + i2; i1 = 1; i2 = pr%16; while (i2) { i2--; i1=i1*2; }
	pr = pr/16 + 6;
	if ((bp_id-->pr) & i1) rtrue; rfalse;
];
[ I7_ShowVtoV bp_id sym x obj1 obj2 pr pr2 proutine1 proutine2;
	pr = bp_id-->0;
	pr2 = bp_id-->1;
	proutine1 = bp_id-->4;
	proutine2 = bp_id-->5;
 
	if (pr && pr2) {
		objectloop (obj1 provides pr)
		  objectloop (obj2 provides pr2) {
				if (sym && obj2 > obj1) continue;
				if (I7_TestVtoV(obj1, bp_id, obj2)) {
					if (x) { I7_ShowRHeader(x); x=0; }
					print "  ", (The) obj1;
					if (sym) print "  <=>  "; else print "  >=>  ";
					print (the) obj2, "^";
				}
		  }
		return;
	}
	if (pr && (pr2==0)) {
		objectloop (obj1 provides pr)
		  for (obj2=1:obj2<=bp_id-->3:obj2++) {
				if (I7_TestVtoV(obj1, bp_id, obj2)) {
					if (x) { I7_ShowRHeader(x); x=0; }
					print "  ", (The) obj1, "  >=>  ";
					(proutine2).call(obj2);
					print "^";
				}
		  }
		return;
	}
	if ((pr==0) && (pr2)) {
		for (obj1=1:obj1<=bp_id-->2:obj1++)
		  objectloop (obj2 provides pr2) {
				if (I7_TestVtoV(obj1, bp_id, obj2)) {
					if (x) { I7_ShowRHeader(x); x=0; }
					print "  ";
					(proutine1).call(obj1);
					print "  >=>  ", (the) obj2, "^";
				}
		  }
		return;
	}
	for (obj1=1:obj1<=bp_id-->2:obj1++)
		  for (obj2=1:obj2<=bp_id-->3:obj2++)
			if (I7_TestVtoV(obj1, bp_id, obj2)) {
				if (x) { I7_ShowRHeader(x); x=0; }
				print "  ";
				(proutine1).call(obj1);
				print "  >=>  ";
				(proutine2).call(obj2);
				print "^";
		  }
];
[ I7_ShowOtoO pr sym x obj1 obj2;
	objectloop (obj1 provides pr) {
			obj2 = obj1.pr;
			if (sym && obj2 < obj1) continue;
			if (obj2 == 0) continue;
		if (x) { I7_ShowRHeader(x); x=0; }
		print "  ", (The) obj1;
		if (sym) print "  ==  "; else print "  >=>  ";
		print (the) obj2, "^";
	}
];
[ I7_RShowOtoO pr sym x obj1 obj2;
	objectloop (obj1) {
		objectloop (obj2 provides pr) {
			if (obj2.pr ~= obj1) continue;
			if (x) { I7_ShowRHeader(x); x=0; }
			print "  ", (The) obj1;
			print "  >=>  ";
			print (the) obj2, "^";
		}
	}
];
[ I7_ShowEquiv pr obj1 obj2 v c somegroups;
!	objectloop (obj1 provides pr) print (name) obj1, " ", obj1.pr, "^";
	objectloop (obj1 provides pr) obj1.pr = -(obj1.pr);
	objectloop (obj1 provides pr) {
		if (obj1.pr < 0) {
			v = obj1.pr; c = 0;
			objectloop (obj2 has i7listflag) give obj2 ~i7listflag;
			objectloop (obj2 provides pr) {
				if (obj2.pr == v) {
					give obj2 i7listflag;
					obj2.pr = -v;
					c++;
				}
			}
			if (c>1) {
				somegroups = true;
				print "  { ";
				I7List(0);
				print " }^";
			} else obj1.pr = v;
		}
	}
	objectloop (obj2 has i7listflag) give obj2 ~i7listflag;
	c = 0; objectloop (obj1 provides pr) if (obj1.pr < 0) { c++; give obj1 i7listflag; }
	if (c == 0) return;
	if (somegroups) print "  and "; else print "  ";
	if (c < 4) { I7List(0); print " in"; }
	else print c;
	if (c == 1) print " a";
	print " single-member group";
	if (c > 1) print "s";
	print "^";
	objectloop (obj1 provides pr) if (obj1.pr < 0) obj1.pr = -(obj1.pr);
];

[ I7_ShowRHeader x rel_type;
	rel_type = RelationList-->(x+1);
	print (string) RelationList-->(x+2);
	if (rel_type == Relation_ByRoutine) ".";
	print ":^";
];

[ I7_ShowR rel_num rel_type x;
	x = rel_num*3;
	rel_type = RelationList-->(x+1);
	if (rel_type == Relation_Implicit) return;
	if (rel_type == Relation_ByRoutine) { I7_ShowRHeader(x); return; }
	switch(rel_type) {
		Relation_OtoO: I7_RShowOtoO(RelationList-->x, false, x); break;
		Relation_OtoV: I7_RShowOtoO(RelationList-->x, false, x); break;
		Relation_VtoO: I7_ShowOtoO(RelationList-->x, false, x); break;
		Relation_VtoV: I7_ShowVtoV(RelationList-->x, false, x); break;
		Relation_Sym_OtoO: I7_ShowOtoO(RelationList-->x, true, x); break;
		Relation_Sym_VtoV: I7_ShowVtoV(RelationList-->x, true, x); break;
		Relation_Equiv: I7_ShowRHeader(x); I7_ShowEquiv(RelationList-->x); break;
		Relation_ByRoutine: break;
	}
];

#ifdef TARGET_ZCODE;
Constant I7_ROUTE_HIGH_BIT = $8000;
#ifnot;
! This will fail if any object numbers (addresses) are past the 2 GB boundary.
Constant I7_ROUTE_HIGH_BIT = $80000000;
#endif;
[ I7_RouteTo from to filter use_doors obj dir in_direction progressed sl through_door;
	if (from == to) return nothing;
	objectloop (obj ofclass K1_room) obj.vector = 0;
	to.vector = 1;
	!print "Routing from ", (the) from, " to ", (the) to, "^";
	while (true) {
		progressed = false;
		!print "Pass begins^";
		objectloop (obj && (obj ofclass K1_room) && ((filter == 0) || (filter(obj))))
			if (obj.vector == 0)
				objectloop (dir in compass)
					if (obj provides (dir.door_dir)) {
						in_direction = obj.(dir.door_dir);
						if (in_direction == nothing) continue;
						!print (the) obj, " > ", (the) dir, " > ", (the) in_direction, "^";
						if ((in_direction ofclass K1_room)
							&& (in_direction.vector > 0)
							&& ((filter == 0) || (filter(in_direction)))) {
							obj.vector = dir | I7_ROUTE_HIGH_BIT;
							!print "* ", (the) obj, " vector is ", (the) dir, "^";
							progressed = true;
							continue;
						}
						if (use_doors && (in_direction ofclass K4_door) &&
							((use_doors & 2) ||
							 (in_direction has open) ||
							 ((in_direction has openable) && (in_direction hasnt locked)))) {
							sl = location; location = obj;
							through_door = in_direction.door_to();
							location = sl;
							!print "Through door is ", (the) through_door, "^";
							if ((through_door ofclass K1_room) && (through_door.vector > 0)
								&& ((filter == 0) || (filter(through_door)))) {
								obj.vector = dir | I7_ROUTE_HIGH_BIT;
								!print "* ", (the) obj, " vector is ", (the) dir, "^";
								progressed = true;
								continue;
							}
						}
					}
		objectloop (obj ofclass K1_room)
			obj.vector = obj.vector &~ I7_ROUTE_HIGH_BIT;
		if (progressed == false) return from.vector;
	}
];
[ I7_CountRouteTo from to filter use_doors obj i;
	if (from == to) return 0;
	if (from ofclass K1_room && to ofclass K1_room) {
		obj = I7_RouteTo(from,to,filter,use_doors);
		if (obj == nothing) return -1;
		i = 0; obj = from;
		while ((obj ~= to) && (i<1000)) { i++; obj = I7_RoomFrom(obj,obj.vector); }
		return i;
	}
	return -1;
];
[ I7_RelRouteTo relprop from to obj obj2 in_direction relkind progressed pr pr2;
	if (from == to) return nothing;
	if (relprop == 0) return nothing;
	relkind = RelationList-->(3*relprop+1);
	if (relkind == Relation_ByRoutine) return nothing;
	relprop = RelationList-->(3*relprop);
	if (relprop == 0) return nothing;
! print "Rel kind is ", relkind, "^";
	if (relkind == Relation_VtoO) {
		objectloop (obj ofclass Object && obj provides relprop) obj.vector = 0;
		to.vector = 1;
		while (true) {
			progressed = false;
			objectloop (obj ofclass Object && obj provides relprop)
				if (obj.vector == 0) {
					in_direction = obj.relprop;
					if ((in_direction ofclass Object && in_direction provides relprop)
						&& (in_direction.vector > 0)) {
						obj.vector = in_direction | I7_ROUTE_HIGH_BIT;
						progressed = true;
						continue;
					}
				}
			objectloop (obj ofclass Object && obj provides relprop)
				obj.vector = obj.vector &~ I7_ROUTE_HIGH_BIT;
			if (progressed == false) return from.vector;
		}
	}
	if (relkind == Relation_OtoV) {
		while (to->relprop) {
			if (to->relprop == from) return to;
			to = to->relprop;
		}
		return nothing;
	}
	pr = relprop-->0;
	pr2 = relprop-->1;
	objectloop (obj ofclass Object && obj provides vector) obj.vector = 0;
	to.vector = 1;
	while (true) {
		progressed = false;
		objectloop (obj ofclass Object && obj provides pr)
			if (obj.vector == 0) {
				objectloop (obj2 ofclass Object && obj2 provides pr2 && obj2.vector > 0) {
					if (I7_TestVtoV(obj, relprop, obj2)) {
						obj.vector = obj2 | I7_ROUTE_HIGH_BIT;
						progressed = true;
						continue;
					}
				}
			}
		objectloop (obj ofclass Object && obj provides vector)
			obj.vector = obj.vector &~ I7_ROUTE_HIGH_BIT;
		if (progressed == false) return from.vector;
	}
];
[ I7_CountRelRouteTo relprop from to obj i;
	if (from == to) return 0;
	i = 0; obj = from;
	if (I7_RelRouteTo(relprop,from,to) == nothing) return -1;
	while ((obj ~= to) && (i<1000)) { i++; obj = obj.vector; }
	return i;
];

! End of Relations.i6
